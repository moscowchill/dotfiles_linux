# Network
ipself() { if [ $# -eq 0 ]; then IF="eth0"; else IF=$1; fi; ifconfig $IF | grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | head -1 }
ipof() { ping -c1 $1 | grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | head -1 }
complete -W "`find /sys/class/net/ -mindepth 1 -printf '%f '`" ipself

# Headers
done_as() { sed -i "1i# Done $(date +'%FT%H%M%S') as: $(fc -ln -1 | awk '{ $1=$1; }1')" $1 }

# SSH
Sshpass-p() { print -z "sshpass -p '' ssh -oStrictHostKeyChecking=no" }

# PPN
PPN() {
    rm -rf ~/PPN
    git clone https://github.com/snovvcrash/PPN ~/PPN
    pushd ~/PPN
    git update-index --skip-worktree docs/{_config.yml,README.md}
    rm -rf docs
    popd
}

# script
Script() { script "${1}"`date "+%FT%H%M%S"`.script }

# crt.sh
# https://github.com/az7rb/crt.sh
crtsh() { curl -s "https://crt.sh/?q=%.${1}&output=json" | jq -r '.[].name_value' | sed 's/\*\.//g' | sort -u }

# fzf-based
KillListener() { sudo lsof -i -n -P | grep LISTEN | tr -s ' ' | fzf --tac --reverse --cycle --height=~50% --preview-window=down:5% -d" " --preview 'echo "sudo kill -9 {2}"' | awk '{print $2}' | while read -r procId; do print -z "sudo kill -9 $procId"; done }

#fzcode() { print -z `cat ~/.fzcode/{posts,ppn} | fzf --tac --cycle --height=~50% --color=16` }

SharpCollection() { print -z `curl -sSL "https://api.github.com/repos/Flangvik/SharpCollection/git/trees/master?recursive=1" | jq -r ".tree[].path" | grep \\.exe | while read line; do echo "curl -sSL https://github.com/Flangvik/SharpCollection/raw/master/$line -o ${line#*/}"; done | fzf --tac --cycle --height=~50% --color=16` }
#SharpCollection() { curl -sSL "https://api.github.com/repos/Flangvik/SharpCollection/git/trees/master?recursive=1" | jq -r '.tree[] | select(.path | endswith(".exe")) | .path | split("/") | "\(.[0]) - \(.[1])"' | fzf -m --reverse --height=50% --preview-window=down:5% -d" - " --preview 'echo "curl -sSL https://github.com/Flangvik/SharpCollection/raw/master/"{1}"/"{2}" -o "{2}""' | awk -F' - ' '{print $1,$2}' | while read -r arch filename; do echo; wget https://github.com/Flangvik/SharpCollection/raw/master/$arch/$filename -O $filename; done }

Feroxbuster-w() { print -z `([ -d /usr/share/seclists ] && find /usr/share/seclists/Discovery/Web-Content -maxdepth 1 -type f || find /usr/share/wordlists/dirbuster/ -maxdepth 1 -type f) | sort | while read line; do echo "feroxbuster -w $line -A -k -r -t 15 -n -u"; done | fzf --tac --cycle --height=~50% --color=16` }

# mkdir -p ~/tools/ffuf && cd ~/tools/ffuf && wget https://github.com/six2dez/OneListForAll/raw/main/{onelistforallmicro,onelistforallshort}.txt
Ffuf-w() { print -z `([ -d /usr/share/seclists ] && find /usr/share/seclists/Discovery/Web-Content -maxdepth 1 -type f || find /usr/share/wordlists/dirbuster/ -maxdepth 1 -type f) | sort | while read line; do echo "ffuf -w $line -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36' -ic -sf -r -c -t 15 -u"; done | fzf --tac --cycle --height=~50% --color=16` }

Httpx-p() { print -z `(echo 'httpx -silent -random-agent -sc -fr -location -title -server -td -method -ip -cname -cdn -p "80,81,443,1080,3000,3128,7001,7002,8080,8443,8888" -t 15 -l'; echo 'httpx -silent -random-agent -sc -fr -location -title -server -td -method -ip -cname -cdn -t 15 -l') | fzf --tac --cycle --height=~50% --color=16` }

Katana() { print -z 'TLD="https://"; katana -d 5 -c 50 -p 20 -ef "ttf,woff,svg,jpeg,jpg,png,ico,gif,css" -cs "^.*\.?`echo $TLD | sed' "'s|https\?://||' | sed 's|/.*||'"'`.*$" -u $TLD' }

# BloodHound
alias Neo4j_ls='docker container ls -f name="neo4j-bh-*"'
alias Neo4j_stop='docker container stop'
Neo4j_start() {
    local neo4j_container_name="neo4j-bh-`basename ../$(realpath ..)`"
    docker run --rm --name $neo4j_container_name -d -p 7687:7687 -p 7474:7474 --env NEO4J_AUTH=neo4j/'Passw0rd!' -v `pwd`/neo4j:/data neo4j:4.4-community && (sleep 5; $HOME/tools/BloodHound/BloodHound --no-sandbox &)
}

# Payloads
InflativeLoading() {
    local payload=`basename ${1} ".exe"`
    wine ~/tools/InflativeLoading/DumpPEFromMemory.exe "${1}" "/tmp/${payload}.bin"
    python3 ~/tools/InflativeLoading/InflativeLoading.py -b "/tmp/${payload}.bin" -o "${payload}.inflative" > /dev/null && echo "[+] Final shellcode -> ${payload}.inflative"
    rm "/tmp/${payload}.bin"
}

# Proxying
export PROXYCHAINS_DIR="$HOME/.proxychains"

PROXYCHAINS_PROFILE=`basename $(pwd)`
[[ -f "$PROXYCHAINS_DIR/$PROXYCHAINS_PROFILE.conf" ]] || PROXYCHAINS_PROFILE="default"
export PROXYCHAINS_PROFILE

alias proxy='proxychains4 -f "$PROXYCHAINS_DIR/$PROXYCHAINS_PROFILE.conf"'
alias Proxychains_ls='ls -la $PROXYCHAINS_DIR'

Proxychains_new() { [[ $# -eq 1 ]] && (cp "$PROXYCHAINS_DIR/default.conf" "$PROXYCHAINS_DIR/$@.conf" && subl "$PROXYCHAINS_DIR/$@.conf") }
Proxychains_export() { [[ $# -eq 1 ]] && export PROXYCHAINS_PROFILE="$@" }
complete -W "`find $PROXYCHAINS_DIR -mindepth 1 -maxdepth 1 -type f -execdir basename {} .conf ';'`" Proxychains_export

gtcp() { ~/tools/graftcp/local/mgraftcp --socks5="127.0.0.1:${1}" "${@:2}" }

# Other
nth() { sed ${1}'q;d' ${2} }
